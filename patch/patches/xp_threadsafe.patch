--- build/common.gypi
+++ build/common.gypi
@@ -3297,6 +3297,10 @@
                 'AdditionalOptions': [
                   # Work around crbug.com/526851, bug in VS 2015 RTM compiler.
                   '/Zc:sizedDealloc-',
+                  # Disable thread-safe statics to avoid overhead and because
+                  # they are disabled on other platforms. See crbug.com/587210
+                  # and -fno-threadsafe-statics.
+                  '/Zc:threadSafeInit-',
                 ],
               },
             },
@@ -3704,6 +3708,8 @@
         'cflags_cc': [
           '-fno-exceptions',
           '-fno-rtti',
+          # If this is removed then remove the corresponding /Zc:threadSafeInit-
+          # for Windows.
           '-fno-threadsafe-statics',
           # Make inline functions have hidden visiblity by default.
           # Surprisingly, not covered by -fvisibility=hidden.
--- build/config/compiler/BUILD.gn
+++ build/config/compiler/BUILD.gn
@@ -145,6 +145,8 @@ config("compiler") {
     # --------------------------------
     cflags += [ "-fno-strict-aliasing" ]  # See http://crbug.com/32204
     cflags_cc += [
+      # If this is removed then remove the corresponding /Zc:threadSafeInit- for
+      # Windows.
       "-fno-threadsafe-statics",
 
       # Not exporting C++ inline functions can generally be applied anywhere
--- build/config/win/BUILD.gn
+++ build/config/win/BUILD.gn
@@ -36,9 +36,16 @@ config("compiler") {
   cflags_c = [ "/TC" ]
   cflags_cc = [ "/TP" ]
 
-  # Work around crbug.com/526851, bug in VS 2015 RTM compiler.
   if (visual_studio_version == "2015") {
-    cflags += [ "/Zc:sizedDealloc-" ]
+    cflags += [
+      # Work around crbug.com/526851, bug in VS 2015 RTM compiler.
+      "/Zc:sizedDealloc-",
+
+      # Disable thread-safe statics to avoid overhead and because
+      # they are disabled on other platforms. See crbug.com/587210
+      # and -fno-threadsafe-statics.
+      "/Zc:threadSafeInit-",
+    ]
   }
 
   # Building with Clang on Windows is a work in progress and very
