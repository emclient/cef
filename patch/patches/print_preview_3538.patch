diff --git chrome/browser/resources/pdf/pdf_viewer.js chrome/browser/resources/pdf/pdf_viewer.js
index 84ac5072c2d5..889d42d903e1 100644
--- chrome/browser/resources/pdf/pdf_viewer.js
+++ chrome/browser/resources/pdf/pdf_viewer.js
@@ -124,9 +124,11 @@ function PDFViewer(browserApi) {
 
   // Parse open pdf parameters.
   this.paramsParser_ = new OpenPDFParamsParser(this.postMessage_.bind(this));
+  var toolbarParam = this.paramsParser_.getUiUrlParams(this.originalUrl_).toolbar;
   var toolbarEnabled =
-      this.paramsParser_.getUiUrlParams(this.originalUrl_).toolbar &&
-      !this.isPrintPreview_;
+      toolbarParam &&
+	  !this.isPrintPreview_;
+  var toolbarButtonsEnabled = toolbarParam;
 
   // The sizer element is placed behind the plugin element to cause scrollbars
   // to be displayed in the window. It is sized according to the document size
@@ -234,6 +236,13 @@ function PDFViewer(browserApi) {
     this.toolbar_.docTitle = getFilenameFromURL(this.originalUrl_);
   }
 
+  if (!toolbarButtonsEnabled)
+  {
+    this.zoomToolbar_.style.display = 'none';
+    if (this.pageIndicator_)
+      this.pageIndicator_.style.display = 'none';
+  }
+
   document.body.addEventListener('change-page', e => {
     this.viewport_.goToPage(e.detail.page);
     if (e.detail.origin == 'bookmark')
@@ -289,7 +298,8 @@ function PDFViewer(browserApi) {
       new ViewportScroller(this.viewport_, this.plugin_, window);
 
   // Request translated strings.
-  chrome.resourcesPrivate.getStrings('pdf', this.handleStrings_.bind(this));
+  if (chrome.resourcesPrivate)
+    chrome.resourcesPrivate.getStrings('pdf', this.handleStrings_.bind(this));
 }
 
 PDFViewer.prototype = {
@@ -683,7 +693,11 @@ PDFViewer.prototype = {
         if (this.toolbar_) {
           this.toolbar_.docLength =
               this.documentDimensions_.pageDimensions.length;
-        }
+		}
+		this.sendScriptingMessage_({
+          type: 'documentDimensionsChanged',
+          pageCount: this.documentDimensions_.pageDimensions.length
+        });
         break;
       case 'email':
         var href = 'mailto:' + message.data.to + '?cc=' + message.data.cc +
@@ -932,7 +946,8 @@ PDFViewer.prototype = {
       pageY: visiblePageDimensions.y,
       pageWidth: visiblePageDimensions.width,
       viewportWidth: size.width,
-      viewportHeight: size.height
+      viewportHeight: size.height,
+	  firstPage: visiblePage
     });
   },
 
@@ -968,6 +983,21 @@ PDFViewer.prototype = {
       case 'selectAll':
         this.postMessage_(message.data);
         break;
+      case 'zoom':
+        if (message.data.zoom == 'fitToPage')
+          this.viewport_.fitToPage();
+        if (message.data.zoom == 'fitToWidth')
+          this.viewport_.fitToWidth();
+        else
+        {
+          var val = parseFloat(message.data.zoom);
+          if (!isNaN(val))
+            this.viewport_.setZoom(message.data.zoom);
+        }
+        break;
+      case 'goToPage':
+        this.viewport_.goToPage(message.data.page);
+        break;
     }
   },
 
@@ -1043,7 +1073,7 @@ PDFViewer.prototype = {
       // leak important information.
       if (this.parentOrigin_ == window.location.origin)
         targetOrigin = this.parentOrigin_;
-      else if (message.type == 'documentLoaded')
+      else if (message.type == 'documentLoaded' || this.isPrintPreview_)
         targetOrigin = '*';
       else
         targetOrigin = this.originalUrl_;
diff --git chrome/browser/resources/pdf/viewport.js chrome/browser/resources/pdf/viewport.js
index bc396e1440f4..617a038a1f74 100644
--- chrome/browser/resources/pdf/viewport.js
+++ chrome/browser/resources/pdf/viewport.js
@@ -629,7 +629,7 @@ Viewport.prototype = {
     var zoomHeight;
 
     if (fitWidth)
-      zoomWidth = windowWidth / pageWidth;
+      zoomWidth = (windowWidth - 1) / pageWidth;
 
     if (fitHeight)
       zoomHeight = windowHeight / pageHeight;
