fee39073721623d80d62233a0f697c0e7c0de967
 chrome/browser/resources/pdf/pdf.js            | 45 ++++++++++++++++++++++----
 printing/printing_context_system_dialog_win.cc |  1 +
 2 files changed, 40 insertions(+), 6 deletions(-)

diff --git chrome/browser/resources/pdf/pdf.js chrome/browser/resources/pdf/pdf.js
index 4ea2b06..5e494d8 100644
--- chrome/browser/resources/pdf/pdf.js
+++ chrome/browser/resources/pdf/pdf.js
@@ -130,14 +130,18 @@ function PDFViewer(browserApi) {
 
   this.delayedScriptingMessages_ = [];
 
-  this.isPrintPreview_ = this.originalUrl_.indexOf(
-                             'chrome://print') == 0;
+  //this.isPrintPreview_ = this.originalUrl_.indexOf(
+  //                           'chrome://print') == 0;
+  this.isPrintPreview_ = true;
+
   // Parse open pdf parameters.
   this.paramsParser_ =
       new OpenPDFParamsParser(this.getNamedDestination_.bind(this));
+  var toolbarParam = this.paramsParser_.getUiUrlParams(this.originalUrl_).toolbar;
   var toolbarEnabled =
-      this.paramsParser_.getUiUrlParams(this.originalUrl_).toolbar &&
+      toolbarParam &&
       !this.isPrintPreview_;
+  var toolbarButtonsEnabled = toolbarParam;
 
   // The sizer element is placed behind the plugin element to cause scrollbars
   // to be displayed in the window. It is sized according to the document size
@@ -233,6 +237,13 @@ function PDFViewer(browserApi) {
         getFilenameFromURL(this.originalUrl_);
   }
 
+  if (!toolbarButtonsEnabled)
+  {
+  	this.zoomToolbar_.style.display = 'none';
+  	if (this.pageIndicator_)
+      this.pageIndicator_.style.display = 'none';
+  }
+
   document.body.addEventListener('change-page', function(e) {
     this.viewport_.goToPage(e.detail.page);
   }.bind(this));
@@ -265,7 +276,8 @@ function PDFViewer(browserApi) {
       new ViewportScroller(this.viewport_, this.plugin_, window);
 
   // Request translated strings.
-  chrome.resourcesPrivate.getStrings('pdf', this.handleStrings_.bind(this));
+  if (chrome.resourcesPrivate)
+    chrome.resourcesPrivate.getStrings('pdf', this.handleStrings_.bind(this));
 }
 
 PDFViewer.prototype = {
@@ -593,6 +605,10 @@ PDFViewer.prototype = {
           this.toolbar_.docLength =
               this.documentDimensions_.pageDimensions.length;
         }
+        this.sendScriptingMessage_({
+        	type: 'documentDimensionsChanged',
+        	pageCount: this.documentDimensions_.pageDimensions.length
+        });
         break;
       case 'email':
         var href = 'mailto:' + message.data.to + '?cc=' + message.data.cc +
@@ -748,7 +764,8 @@ PDFViewer.prototype = {
       pageY: visiblePageDimensions.y,
       pageWidth: visiblePageDimensions.width,
       viewportWidth: size.width,
-      viewportHeight: size.height
+      viewportHeight: size.height,
+      firstPage: visiblePage
     });
   },
 
@@ -784,6 +801,22 @@ PDFViewer.prototype = {
       case 'selectAll':
         this.plugin_.postMessage(message.data);
         break;
+    	case 'zoom':
+	  	if (message.data.zoom == 'fitToPage')
+	  		this.viewport_.fitToPageInternal_(false);
+	  	if (message.data.zoom == 'fitToWidth')
+	  		this.viewport_.fitToWidth();
+	  	else
+	  	{
+	  		var val = parseFloat(message.data.zoom);
+	  		if (!isNaN(val))
+	  			this.viewport_.setZoom(message.data.zoom);
+	  	}
+	  	break;
+	  case 'goToPage':
+	  	this.viewport_.goToPage(message.data.page);
+		break;
+	// TODO: Add changing zoom, page
     }
   },
 
@@ -855,7 +888,7 @@ PDFViewer.prototype = {
       // leak important information.
       if (this.parentOrigin_ == window.location.origin)
         targetOrigin = this.parentOrigin_;
-      else if (message.type == 'documentLoaded')
+      else if (message.type == 'documentLoaded' || this.isPrintPreview_)
         targetOrigin = '*';
       else
         targetOrigin = this.originalUrl_;
diff --git printing/printing_context_system_dialog_win.cc printing/printing_context_system_dialog_win.cc
index 2e22641..de5d3c4 100644
--- printing/printing_context_system_dialog_win.cc
+++ printing/printing_context_system_dialog_win.cc
@@ -52,6 +52,7 @@ void PrintingContextSytemDialogWin::AskUserForSettings(
 
   PRINTPAGERANGE ranges[32];
   dialog_options.nStartPage = START_PAGE_GENERAL;
+  max_pages = 0;
   if (max_pages) {
     // Default initialize to print all the pages.
     memset(ranges, 0, sizeof(ranges));
